version: 2
jobs:
  python-set-workspace:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/samba-chassis
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ .Branch }}-{{ checksum "~/samba-chassis/python/src/Pipfile.lock" }}
      - run:
          name: Install dependencies
          command: |
            cd python
            cd src
            if [ ! $(pipenv --venv) ] ; then
              pipenv lock
              pipenv sync --dev --two
            fi
      - save_cache:
          key: v1-{{ .Branch }}-{{ checksum "~/samba-chassis/python/src/Pipfile.lock" }}
          paths:
            - ~/.local
            - ~/.cache
      - persist_to_workspace:
          root: .
          paths: .

  python-unit-test:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/samba-chassis/python/src
    steps:
      - attach_workspace:
          at: ~/samba-chassis
      - restore_cache:
          key: v1-{{ .Branch }}-{{ checksum "~/samba-chassis/python/src/Pipfile.lock" }}
      - run:
          name: Unit test + coverage
          command: |
            mkdir -p test-reports
            touch test-reports/unit.xml
            pipenv run coverage erase
            pipenv run coverage run --omit="tests/*" --include="samba_chassis/*" --branch -m unittest discover -s tests/unit -p "*_test.py"
            pipenv run coverage xml --omit="tests/*" --include="samba_chassis/*" -i -o test-reports/unit.xml
      - persist_to_workspace:
          root: ~/samba-chassis
          paths:
            - python/src/test-reports/unit.xml

  sonar-analysis:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    working_directory: ~/samba-chassis
    steps:
      - attach_workspace:
          at: ~/samba-chassis
      - run:
          name: Sonar analysis
          command: |
            curl --header "Authorization:token $GITHUB_USER_TOKEN" --header "Accept:application/vnd.github.v3.raw" --remote-name --location https://raw.githubusercontent.com/sambatech/devops/master/circle-ci/run-sonar.sh
            chmod a+x run-sonar.sh
            ./run-sonar.sh install
            ./run-sonar.sh run

workflows:
  version: 2
  feature-pipeline:
    jobs:
      - python-set-workspace
      - python-unit-test:
          requires:
            - python-set-workspace
      - sonar-analysis:
          context: sonar
          requires:
            - python-unit-test

